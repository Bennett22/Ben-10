local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Bennett Scripts | TSL", HidePremium = false, IntroText = "Bennett Scripts", SaveConfig = true, ConfigFolder = "OrionTest"})

local BennettTab = Window:MakeTab({
	Name = "Witch",
	Icon = "rbxassetid://14458282849",
	PremiumOnly = false
})

BennettTab:AddBind({
	Name = "Pain Infliction",
	Default = Enum.KeyCode.One,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "1" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Doloris inflictio",
            [4] = true
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Incendia",
	Default = Enum.KeyCode.Two,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "2" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Incendia"
        },
        [2] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("NormalCast")
        },
        [3] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("NormalCast")
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Errox Femus",
	Default = Enum.KeyCode.Three,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "3" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Errox femus"
        },
        [2] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("ShortCast")
        },
        [3] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("ShortCast")
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Fractus"
        },
        [2] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("ShortCast")
        },
        [3] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("ShortCast")
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Ad Somnum",
	Default = Enum.KeyCode.Four,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "4" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Ad somnum"
        },
        [2] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("NormalCast")
        },
        [3] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("NormalCast")
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Conversus",
	Default = Enum.KeyCode.Five,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "5" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Conversus ad corvos"
        },
        [2] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("NormalCast")
        },
        [3] = {
            [1] = "\4",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = game:GetService("SoundService"):WaitForChild("NormalCast")
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Throat Rip",
	Default = Enum.KeyCode.Six,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "6" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Throat Rip"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

             end
            end
         end)
	end    

})


local BennettTab = Window:MakeTab({
	Name = "Original",
	Icon = "rbxassetid://14458282849",
	PremiumOnly = false
})

BennettTab:AddBind({
	Name = "Neck Snap",
	Default = Enum.KeyCode.One,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "1" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Neck Snap"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Heart Rip",
	Default = Enum.KeyCode.Two,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "2" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Vampire Heart Rip"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

             end
            end
         end)
	end
	
	})
	
	BennettTab:AddBind({
	Name = "Limb Rip",
	Default = Enum.KeyCode.Three,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "3" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Limb Rip"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

             end
            end
         end)
	end
	
	})
	
		BennettTab:AddBind({
	Name = "Eye Gouge",
	Default = Enum.KeyCode.Four,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "4" then
             local player = getPlayer()
             if player then
             
local args = {
    [1] = {
        [1] = {
            [1] = "\6",
            [2] = player.Character,
            [3] = "Eye Gouge"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

             end
            end
         end)
	end
	
	})
