local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Bennett Scripts | AHS: Collided", "GrapeTheme")

local Bennett = Window:NewTab("Powers")
local BennettSection = Bennett:NewSection("Characters Powers (they should work as any char)")

BennettSection:NewToggle("Combo", "Keybind (1)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "1" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Memory",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "Choke",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "Combo",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Madison"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "SCombo",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Madison"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "TelekineticPush",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "InjuryTransference",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


local args = {
    [1] = "Pain",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "Concilum",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "ArealThrow"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Supreme"):WaitForChild("Cordelia"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Transmutation", "Keybind (Q)", function()

    clicktpon = true                
        plr = game.Players.LocalPlayer
        hum = plr.Character.HumanoidRootPart
        mouse = plr:GetMouse()
        mouse.KeyDown:connect(function(key)
        if key == 'q' then
        if mouse.Target then
        if clicktpon then

local args = {
    [1] = "Transmutation",
    [2] = Vector3.new(mouse.Hit.x, mouse.Hit.y + 0.1, mouse.Hit.z)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

end
end
end
end)
end)

BennettSection:NewToggle("Vitalum Vitalis", "Keybind (2)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "2" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "VitalumVitalis",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Choke", "Keybind (3)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "3" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Choke",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Memory Erase", "Keybind (4)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "4" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Memory",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Concilium (The Afflicted one)", "Keybind (5)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "5" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Concilium",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Afflicteds"):WaitForChild("Countess"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Afflicted Combo", "Keybind (6)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "6" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Combo",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Afflicteds"):WaitForChild("Countess"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Feeding", "Keybind (7)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "7" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "feeding2",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Afflicteds"):WaitForChild("Countess"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Slap", "Keybind (8)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "8" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Slap",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Misty"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewButton("Area Telekinesis", " ", function()

local args = {
    [1] = "ArealThrow"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Supreme"):WaitForChild("Cordelia"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

end)

BennettSection:NewButton("Earthquake", " ", function()

local args = {
    [1] = "Earth",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Madison"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

end)

BennettSection:NewButton("Fire Outburst", " ", function()

local args = {
    [1] = "Pyro",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Madison"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

end)

BennettSection:NewButton("Illusion Manipulation", " ", function()

local args = {
    [1] = "Illusion",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Myrtle"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

end)

BennettSection:NewButton("Area Freeze", " ", function()

local args = {
    [1] = "AreaFreeze",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Myrtle"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

end)

local BennettSection = Bennett:NewSection("Spells (they should work as any char)")

BennettSection:NewToggle("Ignis", "Keybind (C)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "c" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Ignis",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Myrtle"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Fractum Os", "Keybind (V)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "v" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Fractum Os",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewToggle("Heart Attack (Say nickname after u click on someone)", "Keybind (B)", function()
    print("You just clicked the bind")

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "b" then
            local player = getPlayer()
            if player then

local args = {
    [1] = "Heart",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

            end
        end
        end)
        end)

BennettSection:NewButton("Heal", " ", function()

local args = {
    [1] = "Restitue eum ad naturam"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

end)

BennettSection:NewButton("Barrier", " ", function()

local args = {
    [1] = "Repellendum malum minatur, ut nobis"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

end)

BennettSection:NewButton("Stop Barrier", " ", function()

local args = {
    [1] = "Stop"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

end)

BennettSection:NewButton("Astral Projection", " ", function()

local args = {
    [1] = "Astral",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

end)

BennettSection:NewButton("Summon (Say Someones nickname after u click)", " ", function()

local args = {
    [1] = "Summon"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

end)

local Bennett = Window:NewTab("Combat")
local BennettSection = Bennett:NewSection("Some characters dont have so here")
BennettSection:NewButton("Combat", " ", function()

local args = {
    [1] = "combat"
}

game:GetService("ReplicatedStorage"):WaitForChild("Mortals"):WaitForChild("1998"):WaitForChild("Brooke"):WaitForChild("Events"):WaitForChild("CharacterEvents"):FireServer(unpack(args))

end)

local Bennett = Window:NewTab("Characters")
local BennettSection = Bennett:NewSection("Mortal")

BennettSection:NewButton("Brooke", " ", function()

local args = {
    [1] = "Brooke"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

local BennettSection = Bennett:NewSection("Pale")

BennettSection:NewButton("Pale", " ", function()

local args = {
    [1] = "Pale"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

local BennettSection = Bennett:NewSection("Satanist")

BennettSection:NewButton("Richard", " ", function()

local args = {
    [1] = "Richard"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Sister Mary", " ", function()

local args = {
    [1] = "Sister Mary"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

local BennettSection = Bennett:NewSection("The Afflicted")

BennettSection:NewButton("The Countess", " ", function()

local args = {
    [1] = "The Countess"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Ramona Royale", " ", function()

local args = {
    [1] = "Ramona Royale"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Donovan", " ", function()

local args = {
    [1] = "Donovan"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

local BennettSection = Bennett:NewSection("Witch")

BennettSection:NewButton("Cordelia Goode", " ", function()

local args = {
    [1] = "Cordelia Goode"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Cordelia Goode Outfit", " ", function()

local args = {
    [1] = "Cordelia Goode S"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Marie", " ", function()

local args = {
    [1] = "Marie"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Queenie", " ", function()

local args = {
    [1] = "Queenie"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Madison Montgomery", " ", function()

local args = {
    [1] = "Madison Montgomery"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Misty Day", " ", function()

local args = {
    [1] = "Misty Day"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Fiona Goode", " ", function()

local args = {
    [1] = "Fiona Goode"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

BennettSection:NewButton("Myrtle Snow", " ", function()

local args = {
    [1] = "Myrtle Snow"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

end)

local Main = Window:NewTab("Misc")
local MainSection = Main:NewSection("")
MainSection:NewButton("Infinite Yield", "", function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/Omg562/Scripts/main/INF'),true))()
end)
MainSection:NewButton("Animations", "", function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/Bennett22/Ben-10/main/Animation'),true))()
end)
MainSection:NewButton("Custom Catalog", "", function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/Bennett22/Ben-10/main/Custom%20Catalog'),true))()
end)
local Tab = Window:NewTab("Credits")
local SettingsSection = Tab:NewSection("discord: bennettscripts")

local SettingsSection = Tab:NewSection("Toggle UI")
SettingsSection:NewKeybind("Toggle UI", "Toggle UI", Enum.KeyCode.M, function()
    Library:ToggleUI()
end)

wait(1)
game.StarterGui:SetCore("SendNotification", { 
    Title = "⛤ Bennett Scripts ⛤";
    Text = "AHS: Collided";
    Icon = "rbxthumb://type=Asset&id=14067496704&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})

if game:GetService("Players").LocalPlayer.UserId == 3185912033 then

    game.Players.LocalPlayer:Kick("Blacklisted xoxoxo")

end
