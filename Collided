local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Bennett Scripts | AHS: Collided", HidePremium = false, IntroText = "Bennett Scripts", SaveConfig = true, ConfigFolder = "OrionTest"})

local BennettTab = Window:MakeTab({
	Name = "Powers",
	Icon = "rbxassetid://14458282849",
	PremiumOnly = false
})

local Section = BennettTab:AddSection({
	Name = "Characters Powers (Most Should Work As Any Character)"
})

BennettTab:AddBind({
	Name = "Power Combo",
	Default = Enum.KeyCode.One,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "1" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "Memory",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "Choke",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "Combo",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Madison"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "SCombo",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Madison"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "TelekineticPush",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "InjuryTransference",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


local args = {
    [1] = "Pain",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "Concilum",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

local args = {
    [1] = "ArealThrow"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Supreme"):WaitForChild("Cordelia"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Vitalum Vitalis",
	Default = Enum.KeyCode.Two,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "2" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "VitalumVitalis",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Choke",
	Default = Enum.KeyCode.Three,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "3" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "Choke",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Memory Erase",
	Default = Enum.KeyCode.Four,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "4" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "Memory",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Concilium (The Afflicted one)",
	Default = Enum.KeyCode.Five,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "5" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "Concilium",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Afflicteds"):WaitForChild("Countess"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


             end
            end
         end)
	end    

})


BennettTab:AddBind({
	Name = "Afflicted Combo",
	Default = Enum.KeyCode.Six,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "6" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "Combo",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Afflicteds"):WaitForChild("Countess"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Feeding",
	Default = Enum.KeyCode.Seven,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "7" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "feeding2",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Afflicteds"):WaitForChild("Countess"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Slap",
	Default = Enum.KeyCode.Eight,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "8" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "Slap",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Misty"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Transmutation",
	Default = Enum.KeyCode.Q,
	Hold = true,
	Callback = function()

    clicktpon = true                
        plr = game.Players.LocalPlayer
        hum = plr.Character.HumanoidRootPart
        mouse = plr:GetMouse()
        mouse.KeyDown:connect(function(key)
        if key == 'q' then
        if mouse.Target then
        if clicktpon then

local args = {
    [1] = "Transmutation",
    [2] = Vector3.new(mouse.Hit.x, mouse.Hit.y + 0.1, mouse.Hit.z)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

end
end
end
end)
end    
})

BennettTab:AddButton({
	Name = "Area Telekinesis",
	Callback = function()

local args = {
    [1] = "ArealThrow"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Supreme"):WaitForChild("Cordelia"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


  	end    
})

BennettTab:AddButton({
	Name = "Earthquake",
	Callback = function()

local args = {
    [1] = "Earth",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Madison"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


  	end    
})

BennettTab:AddButton({
	Name = "Fire Outburst",
	Callback = function()

local args = {
    [1] = "Pyro",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Madison"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))


  	end    
})

BennettTab:AddButton({
	Name = "Illusion Manipulation",
	Callback = function()

local args = {
    [1] = "Illusion",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Myrtle"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Area Freeze",
	Callback = function()

local args = {
    [1] = "AreaFreeze",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Myrtle"):WaitForChild("Events"):WaitForChild("PowerEvents"):FireServer(unpack(args))

  	end    
})

local Section = BennettTab:AddSection({
	Name = "Spells (Most Should Work As Any Character)"
})

BennettTab:AddBind({
	Name = "Ignis",
	Default = Enum.KeyCode.C,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "c" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "Ignis",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Normal"):WaitForChild("Myrtle"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Fractum Os",
	Default = Enum.KeyCode.V,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "v" then
             local player = getPlayer()
             if player then

local args = {
    [1] = "Fractum Os",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))


             end
            end
         end)
	end    

})

BennettTab:AddBind({
	Name = "Heart Attack (Nickname of your target is in your clipboard)",
	Default = Enum.KeyCode.B,
	Hold = false,
	Callback = function()
		print("You just clicked the bind")

      local function getPlayer()
         local userInput = game:GetService("UserInputService")
         local cam = workspace.CurrentCamera
         local mousePos = userInput:GetMouseLocation()
         local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
         players = {}
         for _, x in next, game:GetService('Players'):GetPlayers() do
             players[#players + 1] = x.Character
         end
         local raycastParams = RaycastParams.new()
         raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
         raycastParams.FilterDescendantsInstances = players
         raycastParams.IgnoreWater = true
         local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
         if raycastResult then
             for _, x in next, game:GetService('Players'):GetPlayers() do
                 if not raycastResult.Instance:IsDescendantOf(x.Character) then
                     continue
                 end
                 return x
             end
         end
         return false
     end
 
     local function Set(list)
         local set = {}
         for _, l in ipairs(list) do
             if l then
                 set[l] = true
             end
         end
         return set
     end
 
     game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "b" then
             local player = getPlayer()
             if player then

local plr = player.Character

setclipboard(plr.Name.."")

local args = {
    [1] = "Heart",
    [2] = player.Character.Head
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))



             end
            end
         end)
	end    

})

BennettTab:AddButton({
	Name = "Heal",
	Callback = function()

local args = {
    [1] = "Restitue eum ad naturam"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Barrier",
	Callback = function()

local args = {
    [1] = "Repellendum malum minatur, ut nobis"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Stop Barrier",
	Callback = function()

local args = {
    [1] = "Stop"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Movere",
	Callback = function()

local args = {
    [1] = "Movere",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Astral Projection",
	Callback = function()

local args = {
    [1] = "Astral",
    [2] = workspace:WaitForChild("Model")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

  	end    
})

BennettTab:AddParagraph("Type in target first letter of players nickname","click summon first, the nickname will be copied to your clipboard")

BennettTab:AddButton({
	Name = "Summon",
	Callback = function()

local args = {
    [1] = "Summon"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events()"):WaitForChild("Characters"):WaitForChild("Witches"):WaitForChild("Shared"):WaitForChild("Events"):WaitForChild("Spells"):FireServer(unpack(args))

  	end    
})

BennettTab:AddTextbox({
	Name = "target",
	Default = "",
	TextDisappear = true,
	Callback = function(txt)
      local Players = game:GetService("Players")
      local msg = txt
      local function findPlayer(stringg)
          for _, v in pairs(Players:GetPlayers()) do
              if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                  return v
              end
          end
      end
  
      local player = findPlayer(msg)
      local CHAR = player.Character

local plr = player.Character

setclipboard(plr.Name.."")

	end	  
})

local BennettTab = Window:MakeTab({
	Name = "Others",
	Icon = "rbxassetid://14458282849",
	PremiumOnly = false
})

BennettTab:AddButton({
	Name = "Combat",
	Callback = function()

local args = {
    [1] = "combat"
}

game:GetService("ReplicatedStorage"):WaitForChild("Mortals"):WaitForChild("1998"):WaitForChild("Brooke"):WaitForChild("Events"):WaitForChild("CharacterEvents"):FireServer(unpack(args))

  	end    
})

BennettTab:AddParagraph("","")

BennettTab:AddButton({
	Name = "Get Affilicted Sprint",
	Callback = function()

local plr = game.Players.LocalPlayer

local backup = game.Lighting.Affilicted.Donovan.Abilities.Sprint:Clone()
backup.Parent = plr.Character.Abilities

  	end    
})

BennettTab:AddButton({
	Name = "Get Normal Sprint",
	Callback = function()

local plr = game.Players.LocalPlayer

local backup = game.Lighting.Human.Brooke.Abilities.Sprint:Clone()
backup.Parent = plr.Character.Abilities

  	end    
})

BennettTab:AddButton({
	Name = "Remove Sprint",
	Callback = function()

local plr = game.Players.LocalPlayer

plr.character.Abilities.Sprint:Destroy()

  	end    
})
local BennettTab = Window:MakeTab({
	Name = "Characters",
	Icon = "rbxassetid://14458282849",
	PremiumOnly = false
})

local Section = BennettTab:AddSection({
	Name = "Mortal"
})

BennettTab:AddButton({
	Name = "Brooke",
	Callback = function()

local args = {
    [1] = "Brooke"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

local Section = BennettTab:AddSection({
	Name = "Pale"
})

BennettTab:AddButton({
	Name = "Pale",
	Callback = function()

local args = {
    [1] = "Pale"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

local Section = BennettTab:AddSection({
	Name = "Satanist"
})

BennettTab:AddButton({
	Name = "Richard",
	Callback = function()

local args = {
    [1] = "Richard"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Sister Mary",
	Callback = function()

local args = {
    [1] = "Sister Mary"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

local Section = BennettTab:AddSection({
	Name = "The Afflicted"
})

BennettTab:AddButton({
	Name = "The Countess",
	Callback = function()

local args = {
    [1] = "The Countess"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Ramona Royale",
	Callback = function()

local args = {
    [1] = "Ramona Royale"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Donovan",
	Callback = function()

local args = {
    [1] = "Donovan"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

local Section = BennettTab:AddSection({
	Name = "Witch"
})

BennettTab:AddButton({
	Name = "Cordelia Goode",
	Callback = function()

local args = {
    [1] = "Cordelia Goode"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Cordelia Goode Outfit",
	Callback = function()

local args = {
    [1] = "Cordelia Goode S"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Marie",
	Callback = function()

local args = {
    [1] = "Marie"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Queenie",
	Callback = function()

local args = {
    [1] = "Queenie"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Madison Montgomery",
	Callback = function()

local args = {
    [1] = "Madison Montgomery"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Misty Day",
	Callback = function()

local args = {
    [1] = "Misty Day"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Fiona Goode",
	Callback = function()

local args = {
    [1] = "Fiona Goode"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

BennettTab:AddButton({
	Name = "Myrtle Snow",
	Callback = function()

local args = {
    [1] = "Myrtle Snow"
}

game:GetService("ReplicatedStorage")["Events()"].CharacterSelection.PickCharacter:FireServer(unpack(args))

  	end    
})

local BennettTab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://14458282849",
	PremiumOnly = false
})

BennettTab:AddTextbox({
	Name = "View Someone",
	Default = "",
	TextDisappear = true,
	Callback = function(txt)
      local Players = game:GetService("Players")
      local msg = txt
      local function findPlayer(stringg)
          for _, v in pairs(Players:GetPlayers()) do
              if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                  return v
              end
          end
      end
  
      local player = findPlayer(msg)
      local CHAR = player.Character

      game:GetService("Workspace").CurrentCamera.CameraSubject = player.Character

	end	  
})


BennettTab:AddButton({
	Name = "Unview",
	Callback = function()

     player = game:GetService("Players").LocalPlayer
     game:GetService("Workspace").CurrentCamera.CameraSubject = player.Character


  	end
})

BennettTab:AddTextbox({
	Name = "Teleport To Someone",
	Default = "",
	TextDisappear = true,
	Callback = function(txt)
      local Players = game:GetService("Players")
      local msg = txt
      local function findPlayer(stringg)
          for _, v in pairs(Players:GetPlayers()) do
              if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                  return v
              end
          end
      end
  
      local player = findPlayer(msg)
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
	end	  
})

BennettTab:AddSlider({
	Name = "Speed",
	Min = 0,
	Max = 200,
	Default = 16,
	Color = Color3.fromRGB(),
	Increment = 1,
	ValueName = "Speed Value",
	Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end    
})

BennettTab:AddSlider({
	Name = "Jump",
	Min = 0,
	Max = 200,
	Default = 10,
	Color = Color3.fromRGB(),
	Increment = 1,
	ValueName = "Jump Value",
	Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
	end    
})

local Section = BennettTab:AddSection({
	Name = "Other Scripts"
})

BennettTab:AddButton({
	Name = "Custom Catalog",
	Callback = function()

loadstring(game:HttpGet(('https://raw.githubusercontent.com/Bennett22/Ben-10/main/Custom%20Catalog'),true))()

  	end    
})

BennettTab:AddButton({
	Name = "Animations",
	Callback = function()

loadstring(game:HttpGet(('https://raw.githubusercontent.com/Bennett22/Ben-10/main/Animation'),true))()

  	end    
})

BennettTab:AddButton({
	Name = "Infinite Yield",
	Callback = function()

loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()

  	end    
})

local BennettTab = Window:MakeTab({
	Name = "Credits",
	Icon = "rbxassetid://14458282849",
	PremiumOnly = false
})

local Section = BennettTab:AddSection({
	Name = "discord: bennettscripts"
})

wait(1)
game.StarterGui:SetCore("SendNotification", { 
    Title = "⛤ Bennett Scripts ⛤";
    Text = "AHS: Collided";
    Icon = "rbxthumb://type=Asset&id=14067496704&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})

if game:GetService("Players").LocalPlayer.UserId == 3185912033 then

    game.Players.LocalPlayer:Kick("Blacklisted xoxoxo")

end
